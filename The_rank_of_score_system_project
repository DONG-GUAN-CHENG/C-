/* ============================================== */
/* 程式目的:為了將考試成績分類並擇優列印錄取通知單，
宣告各變數*/
/* ============================================== */

#include<stdio.h>
#include<stdlib.h>
#define MAXStudentNum 10          /* 定義最大數量的考生數量，利用前置處理器*/
int rank1,rank2,rank3,rank4;

struct record /*以結構去儲存考生姓名、種類、各科成績*/
{
    char name[10];            /* 字元陣列儲存考生姓名*/
    char rank;                /* 考生成績分類的種類 */
    float Introduction_Computer_science;            /* 浮點數資料型態儲存各科成績*/
    float Algorithm;
    float Semiconductor_process;
    float Biophotonics;
    float total;
};
typedef struct record Record; /*自定義結構以新型態名稱表示*/
Record student[MAXStudentNum];
Record rankSort[MAXStudentNum];
int studentNum;

/* ---------------------------------------------- */
/* 將各名考生各科成績輸入並進行分類  */
/* ---------------------------------------------- */
void inputData()
{
    int sign = 0;           /* 分類標記 */
    int i;                  /* 循環修正變量 */
    int rankA = 0;          /* 定義各種考生所屬分類*/
    int rankB = 0;
    int rankC = 0;
    int rankD = 0;
    printf( "\t******************************************************\n" );
    printf( "\t**           成績處理系統                **\n" );
    printf( "\t******************************************************\n" );
    printf( "\n\n" );
    printf( "\t成績項目:微積分、演算法、半導體製程、生醫光電" );
    printf( "\n\n" );
    while(1){
        printf( "\n\t 請輸入考生人數 1~%d ", MAXStudentNum);
        scanf( "%d", &studentNum );
        if(0 < studentNum && studentNum <= MAXStudentNum)
            break;
        else{
            printf("輸入錯誤，請重新輸入");
        }
    }
    
    printf( "\t輸入完考生姓名後按enter依序輸入成績\n" );
    
    /* 以下的步驟輸入考生的各科成績，並用sign計算不及格科目個數*/
    for ( i = 0; i < studentNum; i++ )
    {
        printf( "\n" );
        printf( "\t考生%d", i + 1 ); printf( "\t" );
        scanf( "%s",&student[i].name);
        printf( "\t  計算機概論:" );scanf( "%f",&student[i].Introduction_Computer_science);
             if (student[i].Introduction_Computer_science < 60 ) sign++;
        printf( "\t  演算法:" );scanf( "%f",&student[i].Algorithm);
             if (student[i].Algorithm < 60 ) sign++;
        printf( "\t  半導體製程:" );scanf( "%f",&student[i].Semiconductor_process);
             if (student[i].Semiconductor_process < 60 ) sign++;
        printf( "\t  生醫光電:" );scanf( "%f",&student[i].Biophotonics);
             if (student[i].Biophotonics < 60 ) sign++;
             
        if ( sign == 0 )
        {
            student[i].rank = 'A';
            rankA++;
        }
        else if ( sign == 1 )
        {
            student[i].rank = 'B';
            rankB++;
        }
        else if ( sign == 2 )
        {
            student[i].rank = 'C';
            rankC++;
        }
        else
        {
            student[i].rank = 'D';
                rankD++;
            };

        sign = 0;

        student[i].total = student[i].Introduction_Computer_science + student[i].Algorithm +
                           student[i].Semiconductor_process + student[i].Biophotonics;
    }


    printf( "\n此次考試中，各類考生人數分別為:\nA:%d \tB:%d \tC:%d \tD:%d\n",
                      rankA, rankB, rankC, rankD );
    printf( "\n A類別代表的是全部都及格，B類別代表的是有一科不及格\n");
    printf( " C類別代表的為兩科不及格，D類別代表的為三科以上不及格\n");
    rank1 = rankA;
    rank2 = rankB;
    rank3 = rankC;
    rank4 = rankD;
}
    
/* ------------------------------------------------------ */
/* 列印錄取學生的通知單訊息*/
/* ------------------------------------------------------ */
void typeNotice( int j )
{
    int i;
    for( i = 0; i < 20; i++ ) printf( "====" ); printf( "\n" );
    printf( "\t\t\t-----錄取通知-----\n" );
    printf( "\t\t\t%s \n",rankSort[j].name );
    printf( "\t\t\t  恭喜您！您已被錄取。\n" );
    printf( "\t\t\t     您的成績:  \n" );
    printf( "\t\t\t計算機概論\t\t%.2f\n\t\t\t演算法\t\t%.2f\n",
           rankSort[j].Introduction_Computer_science, rankSort[j].Algorithm);
    printf( "\t\t\t半導體製程\t\t%.2f\n\t\t\t生醫光電\t\t%.2f\n",
           rankSort[j].Semiconductor_process , rankSort[j].Biophotonics );
    printf( "\t\t\t總分\t\t%.2f\n",rankSort[j].total);
    
    for( i = 0; i < 20; i++ ) printf( "====" ); printf( "\n" );
}
/* ----------------------------------- */
/* 使用選擇排序法，依總分由大到小排列  */
/* ----------------------------------- */
void sort()
{
    int i,j;
    Record temp;
    for( i = 0; i < studentNum-1; i++ )  /*利用巢狀迴圈尋找第一個最大值*/
        for( j = i + 1; j < studentNum; j++ )
            if( student[i].total < student[j].total )
            {
                temp = student[i];  /*由此開始是互換值*/
                student[i] = student[j];
                student[j] = temp;
            }
}


/* ------------------------------------------ */
/* 對已經按總分排好序的考生進行分類排序處理   */
/* ------------------------------------------ */
void addressSort()
{
    int ja, jb, jc, jd;   /*各類考生在新數組中的起始位址 */
    int i;

    ja = 0;               /* 初始化 */
    jb = rank1;
    jc = rank1 + rank2;
    jd = rank1 + rank2 + rank3;
    
    for( i = 0; i < studentNum; i++ )  /* 將考生按照A、B、C、D 四類排序 */
    {
        switch ( student[i].rank )
        {
        case 'A':
            rankSort[ja] = student[i];
            ja++; break;
        case 'B':
            rankSort[jb] = student[i];
            jb++; break;
        case 'C':
            rankSort[jc] = student[i];
            jc++; break;
        case 'D':
            rankSort[jd] = student[i];
            jd++; break;
        }
    }
}

/* ------------------------------------------- */
/* 錄取訊息的輸入及通知書輸出   */
/* ------------------------------------------- */
void ioControl()
{
    int i;
    int admitNum;         /* 這次錄取的總人數*/

    printf( "\n請輸入計畫錄取的人數: " );
    scanf( "%d", &admitNum );
    if ( admitNum > studentNum )
    {
        printf( "\n輸入錯誤，超出考生總數範圍。請重新輸入:  " );
        scanf( "%d", &admitNum );
    }
    for ( i = 0; i < admitNum; i++ )
        typeNotice( i );
}
/* ------------------------------------------- */
/* 主程式                                      */
/* ------------------------------------------- */
int main()
{
    inputData();
    sort();               /* 總分優先˝ */
    addressSort();        /* 類別優先˝ */
    ioControl();
    system("pause");
    return 0;
}

